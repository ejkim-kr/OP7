#include "live.h"

namespace {
#define DIM 23
#define EDIM 22
#define MEDIM 22
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_3 = 3.8414588206941227;
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_19 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with sympy 1.7.1                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_83290133610455021) {
   out_83290133610455021[0] = 0;
   out_83290133610455021[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_83290133610455021[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_83290133610455021[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_83290133610455021[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_83290133610455021[5] = -sin(in_vec[1]);
   out_83290133610455021[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_83290133610455021[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_83290133610455021[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_83290133610455021[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_83290133610455021[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_83290133610455021[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_83290133610455021[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_83290133610455021[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_83290133610455021[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_83290133610455021[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_83290133610455021[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_83290133610455021[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1295404048766981892) {
   out_1295404048766981892[0] = delta_x[0] + nom_x[0];
   out_1295404048766981892[1] = delta_x[1] + nom_x[1];
   out_1295404048766981892[2] = delta_x[2] + nom_x[2];
   out_1295404048766981892[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1295404048766981892[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1295404048766981892[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1295404048766981892[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1295404048766981892[7] = delta_x[6] + nom_x[7];
   out_1295404048766981892[8] = delta_x[7] + nom_x[8];
   out_1295404048766981892[9] = delta_x[8] + nom_x[9];
   out_1295404048766981892[10] = delta_x[9] + nom_x[10];
   out_1295404048766981892[11] = delta_x[10] + nom_x[11];
   out_1295404048766981892[12] = delta_x[11] + nom_x[12];
   out_1295404048766981892[13] = delta_x[12] + nom_x[13];
   out_1295404048766981892[14] = delta_x[13] + nom_x[14];
   out_1295404048766981892[15] = delta_x[14] + nom_x[15];
   out_1295404048766981892[16] = delta_x[15] + nom_x[16];
   out_1295404048766981892[17] = delta_x[16] + nom_x[17];
   out_1295404048766981892[18] = delta_x[17] + nom_x[18];
   out_1295404048766981892[19] = delta_x[18] + nom_x[19];
   out_1295404048766981892[20] = delta_x[19] + nom_x[20];
   out_1295404048766981892[21] = delta_x[20] + nom_x[21];
   out_1295404048766981892[22] = delta_x[21] + nom_x[22];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7718846480313973371) {
   out_7718846480313973371[0] = -nom_x[0] + true_x[0];
   out_7718846480313973371[1] = -nom_x[1] + true_x[1];
   out_7718846480313973371[2] = -nom_x[2] + true_x[2];
   out_7718846480313973371[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7718846480313973371[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7718846480313973371[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7718846480313973371[6] = -nom_x[7] + true_x[7];
   out_7718846480313973371[7] = -nom_x[8] + true_x[8];
   out_7718846480313973371[8] = -nom_x[9] + true_x[9];
   out_7718846480313973371[9] = -nom_x[10] + true_x[10];
   out_7718846480313973371[10] = -nom_x[11] + true_x[11];
   out_7718846480313973371[11] = -nom_x[12] + true_x[12];
   out_7718846480313973371[12] = -nom_x[13] + true_x[13];
   out_7718846480313973371[13] = -nom_x[14] + true_x[14];
   out_7718846480313973371[14] = -nom_x[15] + true_x[15];
   out_7718846480313973371[15] = -nom_x[16] + true_x[16];
   out_7718846480313973371[16] = -nom_x[17] + true_x[17];
   out_7718846480313973371[17] = -nom_x[18] + true_x[18];
   out_7718846480313973371[18] = -nom_x[19] + true_x[19];
   out_7718846480313973371[19] = -nom_x[20] + true_x[20];
   out_7718846480313973371[20] = -nom_x[21] + true_x[21];
   out_7718846480313973371[21] = -nom_x[22] + true_x[22];
}
void H_mod_fun(double *state, double *out_1359201248254019031) {
   out_1359201248254019031[0] = 1.0;
   out_1359201248254019031[1] = 0.0;
   out_1359201248254019031[2] = 0.0;
   out_1359201248254019031[3] = 0.0;
   out_1359201248254019031[4] = 0.0;
   out_1359201248254019031[5] = 0.0;
   out_1359201248254019031[6] = 0.0;
   out_1359201248254019031[7] = 0.0;
   out_1359201248254019031[8] = 0.0;
   out_1359201248254019031[9] = 0.0;
   out_1359201248254019031[10] = 0.0;
   out_1359201248254019031[11] = 0.0;
   out_1359201248254019031[12] = 0.0;
   out_1359201248254019031[13] = 0.0;
   out_1359201248254019031[14] = 0.0;
   out_1359201248254019031[15] = 0.0;
   out_1359201248254019031[16] = 0.0;
   out_1359201248254019031[17] = 0.0;
   out_1359201248254019031[18] = 0.0;
   out_1359201248254019031[19] = 0.0;
   out_1359201248254019031[20] = 0.0;
   out_1359201248254019031[21] = 0.0;
   out_1359201248254019031[22] = 0.0;
   out_1359201248254019031[23] = 1.0;
   out_1359201248254019031[24] = 0.0;
   out_1359201248254019031[25] = 0.0;
   out_1359201248254019031[26] = 0.0;
   out_1359201248254019031[27] = 0.0;
   out_1359201248254019031[28] = 0.0;
   out_1359201248254019031[29] = 0.0;
   out_1359201248254019031[30] = 0.0;
   out_1359201248254019031[31] = 0.0;
   out_1359201248254019031[32] = 0.0;
   out_1359201248254019031[33] = 0.0;
   out_1359201248254019031[34] = 0.0;
   out_1359201248254019031[35] = 0.0;
   out_1359201248254019031[36] = 0.0;
   out_1359201248254019031[37] = 0.0;
   out_1359201248254019031[38] = 0.0;
   out_1359201248254019031[39] = 0.0;
   out_1359201248254019031[40] = 0.0;
   out_1359201248254019031[41] = 0.0;
   out_1359201248254019031[42] = 0.0;
   out_1359201248254019031[43] = 0.0;
   out_1359201248254019031[44] = 0.0;
   out_1359201248254019031[45] = 0.0;
   out_1359201248254019031[46] = 1.0;
   out_1359201248254019031[47] = 0.0;
   out_1359201248254019031[48] = 0.0;
   out_1359201248254019031[49] = 0.0;
   out_1359201248254019031[50] = 0.0;
   out_1359201248254019031[51] = 0.0;
   out_1359201248254019031[52] = 0.0;
   out_1359201248254019031[53] = 0.0;
   out_1359201248254019031[54] = 0.0;
   out_1359201248254019031[55] = 0.0;
   out_1359201248254019031[56] = 0.0;
   out_1359201248254019031[57] = 0.0;
   out_1359201248254019031[58] = 0.0;
   out_1359201248254019031[59] = 0.0;
   out_1359201248254019031[60] = 0.0;
   out_1359201248254019031[61] = 0.0;
   out_1359201248254019031[62] = 0.0;
   out_1359201248254019031[63] = 0.0;
   out_1359201248254019031[64] = 0.0;
   out_1359201248254019031[65] = 0.0;
   out_1359201248254019031[66] = 0.0;
   out_1359201248254019031[67] = 0.0;
   out_1359201248254019031[68] = 0.0;
   out_1359201248254019031[69] = -0.5*state[4];
   out_1359201248254019031[70] = -0.5*state[5];
   out_1359201248254019031[71] = -0.5*state[6];
   out_1359201248254019031[72] = 0.0;
   out_1359201248254019031[73] = 0.0;
   out_1359201248254019031[74] = 0.0;
   out_1359201248254019031[75] = 0.0;
   out_1359201248254019031[76] = 0.0;
   out_1359201248254019031[77] = 0.0;
   out_1359201248254019031[78] = 0.0;
   out_1359201248254019031[79] = 0.0;
   out_1359201248254019031[80] = 0.0;
   out_1359201248254019031[81] = 0.0;
   out_1359201248254019031[82] = 0.0;
   out_1359201248254019031[83] = 0.0;
   out_1359201248254019031[84] = 0.0;
   out_1359201248254019031[85] = 0.0;
   out_1359201248254019031[86] = 0.0;
   out_1359201248254019031[87] = 0.0;
   out_1359201248254019031[88] = 0.0;
   out_1359201248254019031[89] = 0.0;
   out_1359201248254019031[90] = 0.0;
   out_1359201248254019031[91] = 0.5*state[3];
   out_1359201248254019031[92] = 0.5*state[6];
   out_1359201248254019031[93] = -0.5*state[5];
   out_1359201248254019031[94] = 0.0;
   out_1359201248254019031[95] = 0.0;
   out_1359201248254019031[96] = 0.0;
   out_1359201248254019031[97] = 0.0;
   out_1359201248254019031[98] = 0.0;
   out_1359201248254019031[99] = 0.0;
   out_1359201248254019031[100] = 0.0;
   out_1359201248254019031[101] = 0.0;
   out_1359201248254019031[102] = 0.0;
   out_1359201248254019031[103] = 0.0;
   out_1359201248254019031[104] = 0.0;
   out_1359201248254019031[105] = 0.0;
   out_1359201248254019031[106] = 0.0;
   out_1359201248254019031[107] = 0.0;
   out_1359201248254019031[108] = 0.0;
   out_1359201248254019031[109] = 0.0;
   out_1359201248254019031[110] = 0.0;
   out_1359201248254019031[111] = 0.0;
   out_1359201248254019031[112] = 0.0;
   out_1359201248254019031[113] = -0.5*state[6];
   out_1359201248254019031[114] = 0.5*state[3];
   out_1359201248254019031[115] = 0.5*state[4];
   out_1359201248254019031[116] = 0.0;
   out_1359201248254019031[117] = 0.0;
   out_1359201248254019031[118] = 0.0;
   out_1359201248254019031[119] = 0.0;
   out_1359201248254019031[120] = 0.0;
   out_1359201248254019031[121] = 0.0;
   out_1359201248254019031[122] = 0.0;
   out_1359201248254019031[123] = 0.0;
   out_1359201248254019031[124] = 0.0;
   out_1359201248254019031[125] = 0.0;
   out_1359201248254019031[126] = 0.0;
   out_1359201248254019031[127] = 0.0;
   out_1359201248254019031[128] = 0.0;
   out_1359201248254019031[129] = 0.0;
   out_1359201248254019031[130] = 0.0;
   out_1359201248254019031[131] = 0.0;
   out_1359201248254019031[132] = 0.0;
   out_1359201248254019031[133] = 0.0;
   out_1359201248254019031[134] = 0.0;
   out_1359201248254019031[135] = 0.5*state[5];
   out_1359201248254019031[136] = -0.5*state[4];
   out_1359201248254019031[137] = 0.5*state[3];
   out_1359201248254019031[138] = 0.0;
   out_1359201248254019031[139] = 0.0;
   out_1359201248254019031[140] = 0.0;
   out_1359201248254019031[141] = 0.0;
   out_1359201248254019031[142] = 0.0;
   out_1359201248254019031[143] = 0.0;
   out_1359201248254019031[144] = 0.0;
   out_1359201248254019031[145] = 0.0;
   out_1359201248254019031[146] = 0.0;
   out_1359201248254019031[147] = 0.0;
   out_1359201248254019031[148] = 0.0;
   out_1359201248254019031[149] = 0.0;
   out_1359201248254019031[150] = 0.0;
   out_1359201248254019031[151] = 0.0;
   out_1359201248254019031[152] = 0.0;
   out_1359201248254019031[153] = 0.0;
   out_1359201248254019031[154] = 0.0;
   out_1359201248254019031[155] = 0.0;
   out_1359201248254019031[156] = 0.0;
   out_1359201248254019031[157] = 0.0;
   out_1359201248254019031[158] = 0.0;
   out_1359201248254019031[159] = 0.0;
   out_1359201248254019031[160] = 1.0;
   out_1359201248254019031[161] = 0.0;
   out_1359201248254019031[162] = 0.0;
   out_1359201248254019031[163] = 0.0;
   out_1359201248254019031[164] = 0.0;
   out_1359201248254019031[165] = 0.0;
   out_1359201248254019031[166] = 0.0;
   out_1359201248254019031[167] = 0.0;
   out_1359201248254019031[168] = 0.0;
   out_1359201248254019031[169] = 0.0;
   out_1359201248254019031[170] = 0.0;
   out_1359201248254019031[171] = 0.0;
   out_1359201248254019031[172] = 0.0;
   out_1359201248254019031[173] = 0.0;
   out_1359201248254019031[174] = 0.0;
   out_1359201248254019031[175] = 0.0;
   out_1359201248254019031[176] = 0.0;
   out_1359201248254019031[177] = 0.0;
   out_1359201248254019031[178] = 0.0;
   out_1359201248254019031[179] = 0.0;
   out_1359201248254019031[180] = 0.0;
   out_1359201248254019031[181] = 0.0;
   out_1359201248254019031[182] = 0.0;
   out_1359201248254019031[183] = 1.0;
   out_1359201248254019031[184] = 0.0;
   out_1359201248254019031[185] = 0.0;
   out_1359201248254019031[186] = 0.0;
   out_1359201248254019031[187] = 0.0;
   out_1359201248254019031[188] = 0.0;
   out_1359201248254019031[189] = 0.0;
   out_1359201248254019031[190] = 0.0;
   out_1359201248254019031[191] = 0.0;
   out_1359201248254019031[192] = 0.0;
   out_1359201248254019031[193] = 0.0;
   out_1359201248254019031[194] = 0.0;
   out_1359201248254019031[195] = 0.0;
   out_1359201248254019031[196] = 0.0;
   out_1359201248254019031[197] = 0.0;
   out_1359201248254019031[198] = 0.0;
   out_1359201248254019031[199] = 0.0;
   out_1359201248254019031[200] = 0.0;
   out_1359201248254019031[201] = 0.0;
   out_1359201248254019031[202] = 0.0;
   out_1359201248254019031[203] = 0.0;
   out_1359201248254019031[204] = 0.0;
   out_1359201248254019031[205] = 0.0;
   out_1359201248254019031[206] = 1.0;
   out_1359201248254019031[207] = 0.0;
   out_1359201248254019031[208] = 0.0;
   out_1359201248254019031[209] = 0.0;
   out_1359201248254019031[210] = 0.0;
   out_1359201248254019031[211] = 0.0;
   out_1359201248254019031[212] = 0.0;
   out_1359201248254019031[213] = 0.0;
   out_1359201248254019031[214] = 0.0;
   out_1359201248254019031[215] = 0.0;
   out_1359201248254019031[216] = 0.0;
   out_1359201248254019031[217] = 0.0;
   out_1359201248254019031[218] = 0.0;
   out_1359201248254019031[219] = 0.0;
   out_1359201248254019031[220] = 0.0;
   out_1359201248254019031[221] = 0.0;
   out_1359201248254019031[222] = 0.0;
   out_1359201248254019031[223] = 0.0;
   out_1359201248254019031[224] = 0.0;
   out_1359201248254019031[225] = 0.0;
   out_1359201248254019031[226] = 0.0;
   out_1359201248254019031[227] = 0.0;
   out_1359201248254019031[228] = 0.0;
   out_1359201248254019031[229] = 1.0;
   out_1359201248254019031[230] = 0.0;
   out_1359201248254019031[231] = 0.0;
   out_1359201248254019031[232] = 0.0;
   out_1359201248254019031[233] = 0.0;
   out_1359201248254019031[234] = 0.0;
   out_1359201248254019031[235] = 0.0;
   out_1359201248254019031[236] = 0.0;
   out_1359201248254019031[237] = 0.0;
   out_1359201248254019031[238] = 0.0;
   out_1359201248254019031[239] = 0.0;
   out_1359201248254019031[240] = 0.0;
   out_1359201248254019031[241] = 0.0;
   out_1359201248254019031[242] = 0.0;
   out_1359201248254019031[243] = 0.0;
   out_1359201248254019031[244] = 0.0;
   out_1359201248254019031[245] = 0.0;
   out_1359201248254019031[246] = 0.0;
   out_1359201248254019031[247] = 0.0;
   out_1359201248254019031[248] = 0.0;
   out_1359201248254019031[249] = 0.0;
   out_1359201248254019031[250] = 0.0;
   out_1359201248254019031[251] = 0.0;
   out_1359201248254019031[252] = 1.0;
   out_1359201248254019031[253] = 0.0;
   out_1359201248254019031[254] = 0.0;
   out_1359201248254019031[255] = 0.0;
   out_1359201248254019031[256] = 0.0;
   out_1359201248254019031[257] = 0.0;
   out_1359201248254019031[258] = 0.0;
   out_1359201248254019031[259] = 0.0;
   out_1359201248254019031[260] = 0.0;
   out_1359201248254019031[261] = 0.0;
   out_1359201248254019031[262] = 0.0;
   out_1359201248254019031[263] = 0.0;
   out_1359201248254019031[264] = 0.0;
   out_1359201248254019031[265] = 0.0;
   out_1359201248254019031[266] = 0.0;
   out_1359201248254019031[267] = 0.0;
   out_1359201248254019031[268] = 0.0;
   out_1359201248254019031[269] = 0.0;
   out_1359201248254019031[270] = 0.0;
   out_1359201248254019031[271] = 0.0;
   out_1359201248254019031[272] = 0.0;
   out_1359201248254019031[273] = 0.0;
   out_1359201248254019031[274] = 0.0;
   out_1359201248254019031[275] = 1.0;
   out_1359201248254019031[276] = 0.0;
   out_1359201248254019031[277] = 0.0;
   out_1359201248254019031[278] = 0.0;
   out_1359201248254019031[279] = 0.0;
   out_1359201248254019031[280] = 0.0;
   out_1359201248254019031[281] = 0.0;
   out_1359201248254019031[282] = 0.0;
   out_1359201248254019031[283] = 0.0;
   out_1359201248254019031[284] = 0.0;
   out_1359201248254019031[285] = 0.0;
   out_1359201248254019031[286] = 0.0;
   out_1359201248254019031[287] = 0.0;
   out_1359201248254019031[288] = 0.0;
   out_1359201248254019031[289] = 0.0;
   out_1359201248254019031[290] = 0.0;
   out_1359201248254019031[291] = 0.0;
   out_1359201248254019031[292] = 0.0;
   out_1359201248254019031[293] = 0.0;
   out_1359201248254019031[294] = 0.0;
   out_1359201248254019031[295] = 0.0;
   out_1359201248254019031[296] = 0.0;
   out_1359201248254019031[297] = 0.0;
   out_1359201248254019031[298] = 1.0;
   out_1359201248254019031[299] = 0.0;
   out_1359201248254019031[300] = 0.0;
   out_1359201248254019031[301] = 0.0;
   out_1359201248254019031[302] = 0.0;
   out_1359201248254019031[303] = 0.0;
   out_1359201248254019031[304] = 0.0;
   out_1359201248254019031[305] = 0.0;
   out_1359201248254019031[306] = 0.0;
   out_1359201248254019031[307] = 0.0;
   out_1359201248254019031[308] = 0.0;
   out_1359201248254019031[309] = 0.0;
   out_1359201248254019031[310] = 0.0;
   out_1359201248254019031[311] = 0.0;
   out_1359201248254019031[312] = 0.0;
   out_1359201248254019031[313] = 0.0;
   out_1359201248254019031[314] = 0.0;
   out_1359201248254019031[315] = 0.0;
   out_1359201248254019031[316] = 0.0;
   out_1359201248254019031[317] = 0.0;
   out_1359201248254019031[318] = 0.0;
   out_1359201248254019031[319] = 0.0;
   out_1359201248254019031[320] = 0.0;
   out_1359201248254019031[321] = 1.0;
   out_1359201248254019031[322] = 0.0;
   out_1359201248254019031[323] = 0.0;
   out_1359201248254019031[324] = 0.0;
   out_1359201248254019031[325] = 0.0;
   out_1359201248254019031[326] = 0.0;
   out_1359201248254019031[327] = 0.0;
   out_1359201248254019031[328] = 0.0;
   out_1359201248254019031[329] = 0.0;
   out_1359201248254019031[330] = 0.0;
   out_1359201248254019031[331] = 0.0;
   out_1359201248254019031[332] = 0.0;
   out_1359201248254019031[333] = 0.0;
   out_1359201248254019031[334] = 0.0;
   out_1359201248254019031[335] = 0.0;
   out_1359201248254019031[336] = 0.0;
   out_1359201248254019031[337] = 0.0;
   out_1359201248254019031[338] = 0.0;
   out_1359201248254019031[339] = 0.0;
   out_1359201248254019031[340] = 0.0;
   out_1359201248254019031[341] = 0.0;
   out_1359201248254019031[342] = 0.0;
   out_1359201248254019031[343] = 0.0;
   out_1359201248254019031[344] = 1.0;
   out_1359201248254019031[345] = 0.0;
   out_1359201248254019031[346] = 0.0;
   out_1359201248254019031[347] = 0.0;
   out_1359201248254019031[348] = 0.0;
   out_1359201248254019031[349] = 0.0;
   out_1359201248254019031[350] = 0.0;
   out_1359201248254019031[351] = 0.0;
   out_1359201248254019031[352] = 0.0;
   out_1359201248254019031[353] = 0.0;
   out_1359201248254019031[354] = 0.0;
   out_1359201248254019031[355] = 0.0;
   out_1359201248254019031[356] = 0.0;
   out_1359201248254019031[357] = 0.0;
   out_1359201248254019031[358] = 0.0;
   out_1359201248254019031[359] = 0.0;
   out_1359201248254019031[360] = 0.0;
   out_1359201248254019031[361] = 0.0;
   out_1359201248254019031[362] = 0.0;
   out_1359201248254019031[363] = 0.0;
   out_1359201248254019031[364] = 0.0;
   out_1359201248254019031[365] = 0.0;
   out_1359201248254019031[366] = 0.0;
   out_1359201248254019031[367] = 1.0;
   out_1359201248254019031[368] = 0.0;
   out_1359201248254019031[369] = 0.0;
   out_1359201248254019031[370] = 0.0;
   out_1359201248254019031[371] = 0.0;
   out_1359201248254019031[372] = 0.0;
   out_1359201248254019031[373] = 0.0;
   out_1359201248254019031[374] = 0.0;
   out_1359201248254019031[375] = 0.0;
   out_1359201248254019031[376] = 0.0;
   out_1359201248254019031[377] = 0.0;
   out_1359201248254019031[378] = 0.0;
   out_1359201248254019031[379] = 0.0;
   out_1359201248254019031[380] = 0.0;
   out_1359201248254019031[381] = 0.0;
   out_1359201248254019031[382] = 0.0;
   out_1359201248254019031[383] = 0.0;
   out_1359201248254019031[384] = 0.0;
   out_1359201248254019031[385] = 0.0;
   out_1359201248254019031[386] = 0.0;
   out_1359201248254019031[387] = 0.0;
   out_1359201248254019031[388] = 0.0;
   out_1359201248254019031[389] = 0.0;
   out_1359201248254019031[390] = 1.0;
   out_1359201248254019031[391] = 0.0;
   out_1359201248254019031[392] = 0.0;
   out_1359201248254019031[393] = 0.0;
   out_1359201248254019031[394] = 0.0;
   out_1359201248254019031[395] = 0.0;
   out_1359201248254019031[396] = 0.0;
   out_1359201248254019031[397] = 0.0;
   out_1359201248254019031[398] = 0.0;
   out_1359201248254019031[399] = 0.0;
   out_1359201248254019031[400] = 0.0;
   out_1359201248254019031[401] = 0.0;
   out_1359201248254019031[402] = 0.0;
   out_1359201248254019031[403] = 0.0;
   out_1359201248254019031[404] = 0.0;
   out_1359201248254019031[405] = 0.0;
   out_1359201248254019031[406] = 0.0;
   out_1359201248254019031[407] = 0.0;
   out_1359201248254019031[408] = 0.0;
   out_1359201248254019031[409] = 0.0;
   out_1359201248254019031[410] = 0.0;
   out_1359201248254019031[411] = 0.0;
   out_1359201248254019031[412] = 0.0;
   out_1359201248254019031[413] = 1.0;
   out_1359201248254019031[414] = 0.0;
   out_1359201248254019031[415] = 0.0;
   out_1359201248254019031[416] = 0.0;
   out_1359201248254019031[417] = 0.0;
   out_1359201248254019031[418] = 0.0;
   out_1359201248254019031[419] = 0.0;
   out_1359201248254019031[420] = 0.0;
   out_1359201248254019031[421] = 0.0;
   out_1359201248254019031[422] = 0.0;
   out_1359201248254019031[423] = 0.0;
   out_1359201248254019031[424] = 0.0;
   out_1359201248254019031[425] = 0.0;
   out_1359201248254019031[426] = 0.0;
   out_1359201248254019031[427] = 0.0;
   out_1359201248254019031[428] = 0.0;
   out_1359201248254019031[429] = 0.0;
   out_1359201248254019031[430] = 0.0;
   out_1359201248254019031[431] = 0.0;
   out_1359201248254019031[432] = 0.0;
   out_1359201248254019031[433] = 0.0;
   out_1359201248254019031[434] = 0.0;
   out_1359201248254019031[435] = 0.0;
   out_1359201248254019031[436] = 1.0;
   out_1359201248254019031[437] = 0.0;
   out_1359201248254019031[438] = 0.0;
   out_1359201248254019031[439] = 0.0;
   out_1359201248254019031[440] = 0.0;
   out_1359201248254019031[441] = 0.0;
   out_1359201248254019031[442] = 0.0;
   out_1359201248254019031[443] = 0.0;
   out_1359201248254019031[444] = 0.0;
   out_1359201248254019031[445] = 0.0;
   out_1359201248254019031[446] = 0.0;
   out_1359201248254019031[447] = 0.0;
   out_1359201248254019031[448] = 0.0;
   out_1359201248254019031[449] = 0.0;
   out_1359201248254019031[450] = 0.0;
   out_1359201248254019031[451] = 0.0;
   out_1359201248254019031[452] = 0.0;
   out_1359201248254019031[453] = 0.0;
   out_1359201248254019031[454] = 0.0;
   out_1359201248254019031[455] = 0.0;
   out_1359201248254019031[456] = 0.0;
   out_1359201248254019031[457] = 0.0;
   out_1359201248254019031[458] = 0.0;
   out_1359201248254019031[459] = 1.0;
   out_1359201248254019031[460] = 0.0;
   out_1359201248254019031[461] = 0.0;
   out_1359201248254019031[462] = 0.0;
   out_1359201248254019031[463] = 0.0;
   out_1359201248254019031[464] = 0.0;
   out_1359201248254019031[465] = 0.0;
   out_1359201248254019031[466] = 0.0;
   out_1359201248254019031[467] = 0.0;
   out_1359201248254019031[468] = 0.0;
   out_1359201248254019031[469] = 0.0;
   out_1359201248254019031[470] = 0.0;
   out_1359201248254019031[471] = 0.0;
   out_1359201248254019031[472] = 0.0;
   out_1359201248254019031[473] = 0.0;
   out_1359201248254019031[474] = 0.0;
   out_1359201248254019031[475] = 0.0;
   out_1359201248254019031[476] = 0.0;
   out_1359201248254019031[477] = 0.0;
   out_1359201248254019031[478] = 0.0;
   out_1359201248254019031[479] = 0.0;
   out_1359201248254019031[480] = 0.0;
   out_1359201248254019031[481] = 0.0;
   out_1359201248254019031[482] = 1.0;
   out_1359201248254019031[483] = 0.0;
   out_1359201248254019031[484] = 0.0;
   out_1359201248254019031[485] = 0.0;
   out_1359201248254019031[486] = 0.0;
   out_1359201248254019031[487] = 0.0;
   out_1359201248254019031[488] = 0.0;
   out_1359201248254019031[489] = 0.0;
   out_1359201248254019031[490] = 0.0;
   out_1359201248254019031[491] = 0.0;
   out_1359201248254019031[492] = 0.0;
   out_1359201248254019031[493] = 0.0;
   out_1359201248254019031[494] = 0.0;
   out_1359201248254019031[495] = 0.0;
   out_1359201248254019031[496] = 0.0;
   out_1359201248254019031[497] = 0.0;
   out_1359201248254019031[498] = 0.0;
   out_1359201248254019031[499] = 0.0;
   out_1359201248254019031[500] = 0.0;
   out_1359201248254019031[501] = 0.0;
   out_1359201248254019031[502] = 0.0;
   out_1359201248254019031[503] = 0.0;
   out_1359201248254019031[504] = 0.0;
   out_1359201248254019031[505] = 1.0;
}
void f_fun(double *state, double dt, double *out_1465447188795773295) {
   out_1465447188795773295[0] = dt*state[7] + state[0];
   out_1465447188795773295[1] = dt*state[8] + state[1];
   out_1465447188795773295[2] = dt*state[9] + state[2];
   out_1465447188795773295[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1465447188795773295[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1465447188795773295[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1465447188795773295[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1465447188795773295[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[7];
   out_1465447188795773295[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]) + state[8];
   out_1465447188795773295[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]) + state[9];
   out_1465447188795773295[10] = state[10];
   out_1465447188795773295[11] = state[11];
   out_1465447188795773295[12] = state[12];
   out_1465447188795773295[13] = state[13];
   out_1465447188795773295[14] = state[14];
   out_1465447188795773295[15] = state[15];
   out_1465447188795773295[16] = state[16];
   out_1465447188795773295[17] = state[17];
   out_1465447188795773295[18] = state[18];
   out_1465447188795773295[19] = state[19];
   out_1465447188795773295[20] = state[20];
   out_1465447188795773295[21] = state[21];
   out_1465447188795773295[22] = state[22];
}
void F_fun(double *state, double dt, double *out_3920041907016275812) {
   out_3920041907016275812[0] = 1;
   out_3920041907016275812[1] = 0;
   out_3920041907016275812[2] = 0;
   out_3920041907016275812[3] = 0;
   out_3920041907016275812[4] = 0;
   out_3920041907016275812[5] = 0;
   out_3920041907016275812[6] = dt;
   out_3920041907016275812[7] = 0;
   out_3920041907016275812[8] = 0;
   out_3920041907016275812[9] = 0;
   out_3920041907016275812[10] = 0;
   out_3920041907016275812[11] = 0;
   out_3920041907016275812[12] = 0;
   out_3920041907016275812[13] = 0;
   out_3920041907016275812[14] = 0;
   out_3920041907016275812[15] = 0;
   out_3920041907016275812[16] = 0;
   out_3920041907016275812[17] = 0;
   out_3920041907016275812[18] = 0;
   out_3920041907016275812[19] = 0;
   out_3920041907016275812[20] = 0;
   out_3920041907016275812[21] = 0;
   out_3920041907016275812[22] = 0;
   out_3920041907016275812[23] = 1;
   out_3920041907016275812[24] = 0;
   out_3920041907016275812[25] = 0;
   out_3920041907016275812[26] = 0;
   out_3920041907016275812[27] = 0;
   out_3920041907016275812[28] = 0;
   out_3920041907016275812[29] = dt;
   out_3920041907016275812[30] = 0;
   out_3920041907016275812[31] = 0;
   out_3920041907016275812[32] = 0;
   out_3920041907016275812[33] = 0;
   out_3920041907016275812[34] = 0;
   out_3920041907016275812[35] = 0;
   out_3920041907016275812[36] = 0;
   out_3920041907016275812[37] = 0;
   out_3920041907016275812[38] = 0;
   out_3920041907016275812[39] = 0;
   out_3920041907016275812[40] = 0;
   out_3920041907016275812[41] = 0;
   out_3920041907016275812[42] = 0;
   out_3920041907016275812[43] = 0;
   out_3920041907016275812[44] = 0;
   out_3920041907016275812[45] = 0;
   out_3920041907016275812[46] = 1;
   out_3920041907016275812[47] = 0;
   out_3920041907016275812[48] = 0;
   out_3920041907016275812[49] = 0;
   out_3920041907016275812[50] = 0;
   out_3920041907016275812[51] = 0;
   out_3920041907016275812[52] = dt;
   out_3920041907016275812[53] = 0;
   out_3920041907016275812[54] = 0;
   out_3920041907016275812[55] = 0;
   out_3920041907016275812[56] = 0;
   out_3920041907016275812[57] = 0;
   out_3920041907016275812[58] = 0;
   out_3920041907016275812[59] = 0;
   out_3920041907016275812[60] = 0;
   out_3920041907016275812[61] = 0;
   out_3920041907016275812[62] = 0;
   out_3920041907016275812[63] = 0;
   out_3920041907016275812[64] = 0;
   out_3920041907016275812[65] = 0;
   out_3920041907016275812[66] = 0;
   out_3920041907016275812[67] = 0;
   out_3920041907016275812[68] = 0;
   out_3920041907016275812[69] = 1;
   out_3920041907016275812[70] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3920041907016275812[71] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3920041907016275812[72] = 0;
   out_3920041907016275812[73] = 0;
   out_3920041907016275812[74] = 0;
   out_3920041907016275812[75] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3920041907016275812[76] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3920041907016275812[77] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3920041907016275812[78] = 0;
   out_3920041907016275812[79] = 0;
   out_3920041907016275812[80] = 0;
   out_3920041907016275812[81] = 0;
   out_3920041907016275812[82] = 0;
   out_3920041907016275812[83] = 0;
   out_3920041907016275812[84] = 0;
   out_3920041907016275812[85] = 0;
   out_3920041907016275812[86] = 0;
   out_3920041907016275812[87] = 0;
   out_3920041907016275812[88] = 0;
   out_3920041907016275812[89] = 0;
   out_3920041907016275812[90] = 0;
   out_3920041907016275812[91] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3920041907016275812[92] = 1;
   out_3920041907016275812[93] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3920041907016275812[94] = 0;
   out_3920041907016275812[95] = 0;
   out_3920041907016275812[96] = 0;
   out_3920041907016275812[97] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3920041907016275812[98] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3920041907016275812[99] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3920041907016275812[100] = 0;
   out_3920041907016275812[101] = 0;
   out_3920041907016275812[102] = 0;
   out_3920041907016275812[103] = 0;
   out_3920041907016275812[104] = 0;
   out_3920041907016275812[105] = 0;
   out_3920041907016275812[106] = 0;
   out_3920041907016275812[107] = 0;
   out_3920041907016275812[108] = 0;
   out_3920041907016275812[109] = 0;
   out_3920041907016275812[110] = 0;
   out_3920041907016275812[111] = 0;
   out_3920041907016275812[112] = 0;
   out_3920041907016275812[113] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3920041907016275812[114] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3920041907016275812[115] = 1;
   out_3920041907016275812[116] = 0;
   out_3920041907016275812[117] = 0;
   out_3920041907016275812[118] = 0;
   out_3920041907016275812[119] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3920041907016275812[120] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3920041907016275812[121] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3920041907016275812[122] = 0;
   out_3920041907016275812[123] = 0;
   out_3920041907016275812[124] = 0;
   out_3920041907016275812[125] = 0;
   out_3920041907016275812[126] = 0;
   out_3920041907016275812[127] = 0;
   out_3920041907016275812[128] = 0;
   out_3920041907016275812[129] = 0;
   out_3920041907016275812[130] = 0;
   out_3920041907016275812[131] = 0;
   out_3920041907016275812[132] = 0;
   out_3920041907016275812[133] = 0;
   out_3920041907016275812[134] = 0;
   out_3920041907016275812[135] = 0;
   out_3920041907016275812[136] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_3920041907016275812[137] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[19] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3920041907016275812[138] = 1;
   out_3920041907016275812[139] = 0;
   out_3920041907016275812[140] = 0;
   out_3920041907016275812[141] = 0;
   out_3920041907016275812[142] = 0;
   out_3920041907016275812[143] = 0;
   out_3920041907016275812[144] = 0;
   out_3920041907016275812[145] = 0;
   out_3920041907016275812[146] = 0;
   out_3920041907016275812[147] = 0;
   out_3920041907016275812[148] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3920041907016275812[149] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3920041907016275812[150] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3920041907016275812[151] = 0;
   out_3920041907016275812[152] = 0;
   out_3920041907016275812[153] = 0;
   out_3920041907016275812[154] = 0;
   out_3920041907016275812[155] = 0;
   out_3920041907016275812[156] = 0;
   out_3920041907016275812[157] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[18] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_3920041907016275812[158] = 0;
   out_3920041907016275812[159] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3920041907016275812[160] = 0;
   out_3920041907016275812[161] = 1;
   out_3920041907016275812[162] = 0;
   out_3920041907016275812[163] = 0;
   out_3920041907016275812[164] = 0;
   out_3920041907016275812[165] = 0;
   out_3920041907016275812[166] = 0;
   out_3920041907016275812[167] = 0;
   out_3920041907016275812[168] = 0;
   out_3920041907016275812[169] = 0;
   out_3920041907016275812[170] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3920041907016275812[171] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3920041907016275812[172] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3920041907016275812[173] = 0;
   out_3920041907016275812[174] = 0;
   out_3920041907016275812[175] = 0;
   out_3920041907016275812[176] = 0;
   out_3920041907016275812[177] = 0;
   out_3920041907016275812[178] = 0;
   out_3920041907016275812[179] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]);
   out_3920041907016275812[180] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[19] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[18] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3920041907016275812[181] = 0;
   out_3920041907016275812[182] = 0;
   out_3920041907016275812[183] = 0;
   out_3920041907016275812[184] = 1;
   out_3920041907016275812[185] = 0;
   out_3920041907016275812[186] = 0;
   out_3920041907016275812[187] = 0;
   out_3920041907016275812[188] = 0;
   out_3920041907016275812[189] = 0;
   out_3920041907016275812[190] = 0;
   out_3920041907016275812[191] = 0;
   out_3920041907016275812[192] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3920041907016275812[193] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3920041907016275812[194] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3920041907016275812[195] = 0;
   out_3920041907016275812[196] = 0;
   out_3920041907016275812[197] = 0;
   out_3920041907016275812[198] = 0;
   out_3920041907016275812[199] = 0;
   out_3920041907016275812[200] = 0;
   out_3920041907016275812[201] = 0;
   out_3920041907016275812[202] = 0;
   out_3920041907016275812[203] = 0;
   out_3920041907016275812[204] = 0;
   out_3920041907016275812[205] = 0;
   out_3920041907016275812[206] = 0;
   out_3920041907016275812[207] = 1;
   out_3920041907016275812[208] = 0;
   out_3920041907016275812[209] = 0;
   out_3920041907016275812[210] = 0;
   out_3920041907016275812[211] = 0;
   out_3920041907016275812[212] = 0;
   out_3920041907016275812[213] = 0;
   out_3920041907016275812[214] = 0;
   out_3920041907016275812[215] = 0;
   out_3920041907016275812[216] = 0;
   out_3920041907016275812[217] = 0;
   out_3920041907016275812[218] = 0;
   out_3920041907016275812[219] = 0;
   out_3920041907016275812[220] = 0;
   out_3920041907016275812[221] = 0;
   out_3920041907016275812[222] = 0;
   out_3920041907016275812[223] = 0;
   out_3920041907016275812[224] = 0;
   out_3920041907016275812[225] = 0;
   out_3920041907016275812[226] = 0;
   out_3920041907016275812[227] = 0;
   out_3920041907016275812[228] = 0;
   out_3920041907016275812[229] = 0;
   out_3920041907016275812[230] = 1;
   out_3920041907016275812[231] = 0;
   out_3920041907016275812[232] = 0;
   out_3920041907016275812[233] = 0;
   out_3920041907016275812[234] = 0;
   out_3920041907016275812[235] = 0;
   out_3920041907016275812[236] = 0;
   out_3920041907016275812[237] = 0;
   out_3920041907016275812[238] = 0;
   out_3920041907016275812[239] = 0;
   out_3920041907016275812[240] = 0;
   out_3920041907016275812[241] = 0;
   out_3920041907016275812[242] = 0;
   out_3920041907016275812[243] = 0;
   out_3920041907016275812[244] = 0;
   out_3920041907016275812[245] = 0;
   out_3920041907016275812[246] = 0;
   out_3920041907016275812[247] = 0;
   out_3920041907016275812[248] = 0;
   out_3920041907016275812[249] = 0;
   out_3920041907016275812[250] = 0;
   out_3920041907016275812[251] = 0;
   out_3920041907016275812[252] = 0;
   out_3920041907016275812[253] = 1;
   out_3920041907016275812[254] = 0;
   out_3920041907016275812[255] = 0;
   out_3920041907016275812[256] = 0;
   out_3920041907016275812[257] = 0;
   out_3920041907016275812[258] = 0;
   out_3920041907016275812[259] = 0;
   out_3920041907016275812[260] = 0;
   out_3920041907016275812[261] = 0;
   out_3920041907016275812[262] = 0;
   out_3920041907016275812[263] = 0;
   out_3920041907016275812[264] = 0;
   out_3920041907016275812[265] = 0;
   out_3920041907016275812[266] = 0;
   out_3920041907016275812[267] = 0;
   out_3920041907016275812[268] = 0;
   out_3920041907016275812[269] = 0;
   out_3920041907016275812[270] = 0;
   out_3920041907016275812[271] = 0;
   out_3920041907016275812[272] = 0;
   out_3920041907016275812[273] = 0;
   out_3920041907016275812[274] = 0;
   out_3920041907016275812[275] = 0;
   out_3920041907016275812[276] = 1;
   out_3920041907016275812[277] = 0;
   out_3920041907016275812[278] = 0;
   out_3920041907016275812[279] = 0;
   out_3920041907016275812[280] = 0;
   out_3920041907016275812[281] = 0;
   out_3920041907016275812[282] = 0;
   out_3920041907016275812[283] = 0;
   out_3920041907016275812[284] = 0;
   out_3920041907016275812[285] = 0;
   out_3920041907016275812[286] = 0;
   out_3920041907016275812[287] = 0;
   out_3920041907016275812[288] = 0;
   out_3920041907016275812[289] = 0;
   out_3920041907016275812[290] = 0;
   out_3920041907016275812[291] = 0;
   out_3920041907016275812[292] = 0;
   out_3920041907016275812[293] = 0;
   out_3920041907016275812[294] = 0;
   out_3920041907016275812[295] = 0;
   out_3920041907016275812[296] = 0;
   out_3920041907016275812[297] = 0;
   out_3920041907016275812[298] = 0;
   out_3920041907016275812[299] = 1;
   out_3920041907016275812[300] = 0;
   out_3920041907016275812[301] = 0;
   out_3920041907016275812[302] = 0;
   out_3920041907016275812[303] = 0;
   out_3920041907016275812[304] = 0;
   out_3920041907016275812[305] = 0;
   out_3920041907016275812[306] = 0;
   out_3920041907016275812[307] = 0;
   out_3920041907016275812[308] = 0;
   out_3920041907016275812[309] = 0;
   out_3920041907016275812[310] = 0;
   out_3920041907016275812[311] = 0;
   out_3920041907016275812[312] = 0;
   out_3920041907016275812[313] = 0;
   out_3920041907016275812[314] = 0;
   out_3920041907016275812[315] = 0;
   out_3920041907016275812[316] = 0;
   out_3920041907016275812[317] = 0;
   out_3920041907016275812[318] = 0;
   out_3920041907016275812[319] = 0;
   out_3920041907016275812[320] = 0;
   out_3920041907016275812[321] = 0;
   out_3920041907016275812[322] = 1;
   out_3920041907016275812[323] = 0;
   out_3920041907016275812[324] = 0;
   out_3920041907016275812[325] = 0;
   out_3920041907016275812[326] = 0;
   out_3920041907016275812[327] = 0;
   out_3920041907016275812[328] = 0;
   out_3920041907016275812[329] = 0;
   out_3920041907016275812[330] = 0;
   out_3920041907016275812[331] = 0;
   out_3920041907016275812[332] = 0;
   out_3920041907016275812[333] = 0;
   out_3920041907016275812[334] = 0;
   out_3920041907016275812[335] = 0;
   out_3920041907016275812[336] = 0;
   out_3920041907016275812[337] = 0;
   out_3920041907016275812[338] = 0;
   out_3920041907016275812[339] = 0;
   out_3920041907016275812[340] = 0;
   out_3920041907016275812[341] = 0;
   out_3920041907016275812[342] = 0;
   out_3920041907016275812[343] = 0;
   out_3920041907016275812[344] = 0;
   out_3920041907016275812[345] = 1;
   out_3920041907016275812[346] = 0;
   out_3920041907016275812[347] = 0;
   out_3920041907016275812[348] = 0;
   out_3920041907016275812[349] = 0;
   out_3920041907016275812[350] = 0;
   out_3920041907016275812[351] = 0;
   out_3920041907016275812[352] = 0;
   out_3920041907016275812[353] = 0;
   out_3920041907016275812[354] = 0;
   out_3920041907016275812[355] = 0;
   out_3920041907016275812[356] = 0;
   out_3920041907016275812[357] = 0;
   out_3920041907016275812[358] = 0;
   out_3920041907016275812[359] = 0;
   out_3920041907016275812[360] = 0;
   out_3920041907016275812[361] = 0;
   out_3920041907016275812[362] = 0;
   out_3920041907016275812[363] = 0;
   out_3920041907016275812[364] = 0;
   out_3920041907016275812[365] = 0;
   out_3920041907016275812[366] = 0;
   out_3920041907016275812[367] = 0;
   out_3920041907016275812[368] = 1;
   out_3920041907016275812[369] = 0;
   out_3920041907016275812[370] = 0;
   out_3920041907016275812[371] = 0;
   out_3920041907016275812[372] = 0;
   out_3920041907016275812[373] = 0;
   out_3920041907016275812[374] = 0;
   out_3920041907016275812[375] = 0;
   out_3920041907016275812[376] = 0;
   out_3920041907016275812[377] = 0;
   out_3920041907016275812[378] = 0;
   out_3920041907016275812[379] = 0;
   out_3920041907016275812[380] = 0;
   out_3920041907016275812[381] = 0;
   out_3920041907016275812[382] = 0;
   out_3920041907016275812[383] = 0;
   out_3920041907016275812[384] = 0;
   out_3920041907016275812[385] = 0;
   out_3920041907016275812[386] = 0;
   out_3920041907016275812[387] = 0;
   out_3920041907016275812[388] = 0;
   out_3920041907016275812[389] = 0;
   out_3920041907016275812[390] = 0;
   out_3920041907016275812[391] = 1;
   out_3920041907016275812[392] = 0;
   out_3920041907016275812[393] = 0;
   out_3920041907016275812[394] = 0;
   out_3920041907016275812[395] = 0;
   out_3920041907016275812[396] = 0;
   out_3920041907016275812[397] = 0;
   out_3920041907016275812[398] = 0;
   out_3920041907016275812[399] = 0;
   out_3920041907016275812[400] = 0;
   out_3920041907016275812[401] = 0;
   out_3920041907016275812[402] = 0;
   out_3920041907016275812[403] = 0;
   out_3920041907016275812[404] = 0;
   out_3920041907016275812[405] = 0;
   out_3920041907016275812[406] = 0;
   out_3920041907016275812[407] = 0;
   out_3920041907016275812[408] = 0;
   out_3920041907016275812[409] = 0;
   out_3920041907016275812[410] = 0;
   out_3920041907016275812[411] = 0;
   out_3920041907016275812[412] = 0;
   out_3920041907016275812[413] = 0;
   out_3920041907016275812[414] = 1;
   out_3920041907016275812[415] = 0;
   out_3920041907016275812[416] = 0;
   out_3920041907016275812[417] = 0;
   out_3920041907016275812[418] = 0;
   out_3920041907016275812[419] = 0;
   out_3920041907016275812[420] = 0;
   out_3920041907016275812[421] = 0;
   out_3920041907016275812[422] = 0;
   out_3920041907016275812[423] = 0;
   out_3920041907016275812[424] = 0;
   out_3920041907016275812[425] = 0;
   out_3920041907016275812[426] = 0;
   out_3920041907016275812[427] = 0;
   out_3920041907016275812[428] = 0;
   out_3920041907016275812[429] = 0;
   out_3920041907016275812[430] = 0;
   out_3920041907016275812[431] = 0;
   out_3920041907016275812[432] = 0;
   out_3920041907016275812[433] = 0;
   out_3920041907016275812[434] = 0;
   out_3920041907016275812[435] = 0;
   out_3920041907016275812[436] = 0;
   out_3920041907016275812[437] = 1;
   out_3920041907016275812[438] = 0;
   out_3920041907016275812[439] = 0;
   out_3920041907016275812[440] = 0;
   out_3920041907016275812[441] = 0;
   out_3920041907016275812[442] = 0;
   out_3920041907016275812[443] = 0;
   out_3920041907016275812[444] = 0;
   out_3920041907016275812[445] = 0;
   out_3920041907016275812[446] = 0;
   out_3920041907016275812[447] = 0;
   out_3920041907016275812[448] = 0;
   out_3920041907016275812[449] = 0;
   out_3920041907016275812[450] = 0;
   out_3920041907016275812[451] = 0;
   out_3920041907016275812[452] = 0;
   out_3920041907016275812[453] = 0;
   out_3920041907016275812[454] = 0;
   out_3920041907016275812[455] = 0;
   out_3920041907016275812[456] = 0;
   out_3920041907016275812[457] = 0;
   out_3920041907016275812[458] = 0;
   out_3920041907016275812[459] = 0;
   out_3920041907016275812[460] = 1;
   out_3920041907016275812[461] = 0;
   out_3920041907016275812[462] = 0;
   out_3920041907016275812[463] = 0;
   out_3920041907016275812[464] = 0;
   out_3920041907016275812[465] = 0;
   out_3920041907016275812[466] = 0;
   out_3920041907016275812[467] = 0;
   out_3920041907016275812[468] = 0;
   out_3920041907016275812[469] = 0;
   out_3920041907016275812[470] = 0;
   out_3920041907016275812[471] = 0;
   out_3920041907016275812[472] = 0;
   out_3920041907016275812[473] = 0;
   out_3920041907016275812[474] = 0;
   out_3920041907016275812[475] = 0;
   out_3920041907016275812[476] = 0;
   out_3920041907016275812[477] = 0;
   out_3920041907016275812[478] = 0;
   out_3920041907016275812[479] = 0;
   out_3920041907016275812[480] = 0;
   out_3920041907016275812[481] = 0;
   out_3920041907016275812[482] = 0;
   out_3920041907016275812[483] = 1;
}
void h_3(double *state, double *unused, double *out_271482028885263482) {
   out_271482028885263482[0] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7)*state[16];
}
void H_3(double *state, double *unused, double *out_6517061992468698667) {
   out_6517061992468698667[0] = 0;
   out_6517061992468698667[1] = 0;
   out_6517061992468698667[2] = 0;
   out_6517061992468698667[3] = 0;
   out_6517061992468698667[4] = 0;
   out_6517061992468698667[5] = 0;
   out_6517061992468698667[6] = 0;
   out_6517061992468698667[7] = state[7]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6517061992468698667[8] = state[8]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6517061992468698667[9] = state[9]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6517061992468698667[10] = 0;
   out_6517061992468698667[11] = 0;
   out_6517061992468698667[12] = 0;
   out_6517061992468698667[13] = 0;
   out_6517061992468698667[14] = 0;
   out_6517061992468698667[15] = 0;
   out_6517061992468698667[16] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6517061992468698667[17] = 0;
   out_6517061992468698667[18] = 0;
   out_6517061992468698667[19] = 0;
   out_6517061992468698667[20] = 0;
   out_6517061992468698667[21] = 0;
   out_6517061992468698667[22] = 0;
}
void h_4(double *state, double *unused, double *out_4706127011587876512) {
   out_4706127011587876512[0] = state[10] + state[13];
   out_4706127011587876512[1] = state[11] + state[14];
   out_4706127011587876512[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6594544378669371375) {
   out_6594544378669371375[0] = 0;
   out_6594544378669371375[1] = 0;
   out_6594544378669371375[2] = 0;
   out_6594544378669371375[3] = 0;
   out_6594544378669371375[4] = 0;
   out_6594544378669371375[5] = 0;
   out_6594544378669371375[6] = 0;
   out_6594544378669371375[7] = 0;
   out_6594544378669371375[8] = 0;
   out_6594544378669371375[9] = 0;
   out_6594544378669371375[10] = 1;
   out_6594544378669371375[11] = 0;
   out_6594544378669371375[12] = 0;
   out_6594544378669371375[13] = 1;
   out_6594544378669371375[14] = 0;
   out_6594544378669371375[15] = 0;
   out_6594544378669371375[16] = 0;
   out_6594544378669371375[17] = 0;
   out_6594544378669371375[18] = 0;
   out_6594544378669371375[19] = 0;
   out_6594544378669371375[20] = 0;
   out_6594544378669371375[21] = 0;
   out_6594544378669371375[22] = 0;
   out_6594544378669371375[23] = 0;
   out_6594544378669371375[24] = 0;
   out_6594544378669371375[25] = 0;
   out_6594544378669371375[26] = 0;
   out_6594544378669371375[27] = 0;
   out_6594544378669371375[28] = 0;
   out_6594544378669371375[29] = 0;
   out_6594544378669371375[30] = 0;
   out_6594544378669371375[31] = 0;
   out_6594544378669371375[32] = 0;
   out_6594544378669371375[33] = 0;
   out_6594544378669371375[34] = 1;
   out_6594544378669371375[35] = 0;
   out_6594544378669371375[36] = 0;
   out_6594544378669371375[37] = 1;
   out_6594544378669371375[38] = 0;
   out_6594544378669371375[39] = 0;
   out_6594544378669371375[40] = 0;
   out_6594544378669371375[41] = 0;
   out_6594544378669371375[42] = 0;
   out_6594544378669371375[43] = 0;
   out_6594544378669371375[44] = 0;
   out_6594544378669371375[45] = 0;
   out_6594544378669371375[46] = 0;
   out_6594544378669371375[47] = 0;
   out_6594544378669371375[48] = 0;
   out_6594544378669371375[49] = 0;
   out_6594544378669371375[50] = 0;
   out_6594544378669371375[51] = 0;
   out_6594544378669371375[52] = 0;
   out_6594544378669371375[53] = 0;
   out_6594544378669371375[54] = 0;
   out_6594544378669371375[55] = 0;
   out_6594544378669371375[56] = 0;
   out_6594544378669371375[57] = 0;
   out_6594544378669371375[58] = 1;
   out_6594544378669371375[59] = 0;
   out_6594544378669371375[60] = 0;
   out_6594544378669371375[61] = 1;
   out_6594544378669371375[62] = 0;
   out_6594544378669371375[63] = 0;
   out_6594544378669371375[64] = 0;
   out_6594544378669371375[65] = 0;
   out_6594544378669371375[66] = 0;
   out_6594544378669371375[67] = 0;
   out_6594544378669371375[68] = 0;
}
void h_9(double *state, double *unused, double *out_3018609892509436051) {
   out_3018609892509436051[0] = state[10];
   out_3018609892509436051[1] = state[11];
   out_3018609892509436051[2] = state[12];
}
void H_9(double *state, double *unused, double *out_126318548185852723) {
   out_126318548185852723[0] = 0;
   out_126318548185852723[1] = 0;
   out_126318548185852723[2] = 0;
   out_126318548185852723[3] = 0;
   out_126318548185852723[4] = 0;
   out_126318548185852723[5] = 0;
   out_126318548185852723[6] = 0;
   out_126318548185852723[7] = 0;
   out_126318548185852723[8] = 0;
   out_126318548185852723[9] = 0;
   out_126318548185852723[10] = 1;
   out_126318548185852723[11] = 0;
   out_126318548185852723[12] = 0;
   out_126318548185852723[13] = 0;
   out_126318548185852723[14] = 0;
   out_126318548185852723[15] = 0;
   out_126318548185852723[16] = 0;
   out_126318548185852723[17] = 0;
   out_126318548185852723[18] = 0;
   out_126318548185852723[19] = 0;
   out_126318548185852723[20] = 0;
   out_126318548185852723[21] = 0;
   out_126318548185852723[22] = 0;
   out_126318548185852723[23] = 0;
   out_126318548185852723[24] = 0;
   out_126318548185852723[25] = 0;
   out_126318548185852723[26] = 0;
   out_126318548185852723[27] = 0;
   out_126318548185852723[28] = 0;
   out_126318548185852723[29] = 0;
   out_126318548185852723[30] = 0;
   out_126318548185852723[31] = 0;
   out_126318548185852723[32] = 0;
   out_126318548185852723[33] = 0;
   out_126318548185852723[34] = 1;
   out_126318548185852723[35] = 0;
   out_126318548185852723[36] = 0;
   out_126318548185852723[37] = 0;
   out_126318548185852723[38] = 0;
   out_126318548185852723[39] = 0;
   out_126318548185852723[40] = 0;
   out_126318548185852723[41] = 0;
   out_126318548185852723[42] = 0;
   out_126318548185852723[43] = 0;
   out_126318548185852723[44] = 0;
   out_126318548185852723[45] = 0;
   out_126318548185852723[46] = 0;
   out_126318548185852723[47] = 0;
   out_126318548185852723[48] = 0;
   out_126318548185852723[49] = 0;
   out_126318548185852723[50] = 0;
   out_126318548185852723[51] = 0;
   out_126318548185852723[52] = 0;
   out_126318548185852723[53] = 0;
   out_126318548185852723[54] = 0;
   out_126318548185852723[55] = 0;
   out_126318548185852723[56] = 0;
   out_126318548185852723[57] = 0;
   out_126318548185852723[58] = 1;
   out_126318548185852723[59] = 0;
   out_126318548185852723[60] = 0;
   out_126318548185852723[61] = 0;
   out_126318548185852723[62] = 0;
   out_126318548185852723[63] = 0;
   out_126318548185852723[64] = 0;
   out_126318548185852723[65] = 0;
   out_126318548185852723[66] = 0;
   out_126318548185852723[67] = 0;
   out_126318548185852723[68] = 0;
}
void h_10(double *state, double *unused, double *out_5194968214894559743) {
   out_5194968214894559743[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[17];
   out_5194968214894559743[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[18];
   out_5194968214894559743[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[19];
}
void H_10(double *state, double *unused, double *out_8423363738041589047) {
   out_8423363738041589047[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8423363738041589047[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8423363738041589047[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8423363738041589047[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8423363738041589047[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8423363738041589047[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8423363738041589047[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8423363738041589047[7] = 0;
   out_8423363738041589047[8] = 0;
   out_8423363738041589047[9] = 0;
   out_8423363738041589047[10] = 0;
   out_8423363738041589047[11] = 0;
   out_8423363738041589047[12] = 0;
   out_8423363738041589047[13] = 0;
   out_8423363738041589047[14] = 0;
   out_8423363738041589047[15] = 0;
   out_8423363738041589047[16] = 0;
   out_8423363738041589047[17] = 1;
   out_8423363738041589047[18] = 0;
   out_8423363738041589047[19] = 0;
   out_8423363738041589047[20] = 0;
   out_8423363738041589047[21] = 0;
   out_8423363738041589047[22] = 0;
   out_8423363738041589047[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8423363738041589047[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8423363738041589047[25] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8423363738041589047[26] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8423363738041589047[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8423363738041589047[28] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8423363738041589047[29] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8423363738041589047[30] = 0;
   out_8423363738041589047[31] = 0;
   out_8423363738041589047[32] = 0;
   out_8423363738041589047[33] = 0;
   out_8423363738041589047[34] = 0;
   out_8423363738041589047[35] = 0;
   out_8423363738041589047[36] = 0;
   out_8423363738041589047[37] = 0;
   out_8423363738041589047[38] = 0;
   out_8423363738041589047[39] = 0;
   out_8423363738041589047[40] = 0;
   out_8423363738041589047[41] = 1;
   out_8423363738041589047[42] = 0;
   out_8423363738041589047[43] = 0;
   out_8423363738041589047[44] = 0;
   out_8423363738041589047[45] = 0;
   out_8423363738041589047[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8423363738041589047[47] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8423363738041589047[48] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8423363738041589047[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8423363738041589047[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8423363738041589047[51] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8423363738041589047[52] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8423363738041589047[53] = 0;
   out_8423363738041589047[54] = 0;
   out_8423363738041589047[55] = 0;
   out_8423363738041589047[56] = 0;
   out_8423363738041589047[57] = 0;
   out_8423363738041589047[58] = 0;
   out_8423363738041589047[59] = 0;
   out_8423363738041589047[60] = 0;
   out_8423363738041589047[61] = 0;
   out_8423363738041589047[62] = 0;
   out_8423363738041589047[63] = 0;
   out_8423363738041589047[64] = 0;
   out_8423363738041589047[65] = 1;
   out_8423363738041589047[66] = 0;
   out_8423363738041589047[67] = 0;
   out_8423363738041589047[68] = 0;
}
void h_12(double *state, double *unused, double *out_2336519524919619223) {
   out_2336519524919619223[0] = state[0];
   out_2336519524919619223[1] = state[1];
   out_2336519524919619223[2] = state[2];
}
void H_12(double *state, double *unused, double *out_89631483945793678) {
   out_89631483945793678[0] = 1;
   out_89631483945793678[1] = 0;
   out_89631483945793678[2] = 0;
   out_89631483945793678[3] = 0;
   out_89631483945793678[4] = 0;
   out_89631483945793678[5] = 0;
   out_89631483945793678[6] = 0;
   out_89631483945793678[7] = 0;
   out_89631483945793678[8] = 0;
   out_89631483945793678[9] = 0;
   out_89631483945793678[10] = 0;
   out_89631483945793678[11] = 0;
   out_89631483945793678[12] = 0;
   out_89631483945793678[13] = 0;
   out_89631483945793678[14] = 0;
   out_89631483945793678[15] = 0;
   out_89631483945793678[16] = 0;
   out_89631483945793678[17] = 0;
   out_89631483945793678[18] = 0;
   out_89631483945793678[19] = 0;
   out_89631483945793678[20] = 0;
   out_89631483945793678[21] = 0;
   out_89631483945793678[22] = 0;
   out_89631483945793678[23] = 0;
   out_89631483945793678[24] = 1;
   out_89631483945793678[25] = 0;
   out_89631483945793678[26] = 0;
   out_89631483945793678[27] = 0;
   out_89631483945793678[28] = 0;
   out_89631483945793678[29] = 0;
   out_89631483945793678[30] = 0;
   out_89631483945793678[31] = 0;
   out_89631483945793678[32] = 0;
   out_89631483945793678[33] = 0;
   out_89631483945793678[34] = 0;
   out_89631483945793678[35] = 0;
   out_89631483945793678[36] = 0;
   out_89631483945793678[37] = 0;
   out_89631483945793678[38] = 0;
   out_89631483945793678[39] = 0;
   out_89631483945793678[40] = 0;
   out_89631483945793678[41] = 0;
   out_89631483945793678[42] = 0;
   out_89631483945793678[43] = 0;
   out_89631483945793678[44] = 0;
   out_89631483945793678[45] = 0;
   out_89631483945793678[46] = 0;
   out_89631483945793678[47] = 0;
   out_89631483945793678[48] = 1;
   out_89631483945793678[49] = 0;
   out_89631483945793678[50] = 0;
   out_89631483945793678[51] = 0;
   out_89631483945793678[52] = 0;
   out_89631483945793678[53] = 0;
   out_89631483945793678[54] = 0;
   out_89631483945793678[55] = 0;
   out_89631483945793678[56] = 0;
   out_89631483945793678[57] = 0;
   out_89631483945793678[58] = 0;
   out_89631483945793678[59] = 0;
   out_89631483945793678[60] = 0;
   out_89631483945793678[61] = 0;
   out_89631483945793678[62] = 0;
   out_89631483945793678[63] = 0;
   out_89631483945793678[64] = 0;
   out_89631483945793678[65] = 0;
   out_89631483945793678[66] = 0;
   out_89631483945793678[67] = 0;
   out_89631483945793678[68] = 0;
}
void h_31(double *state, double *unused, double *out_3272129980774585730) {
   out_3272129980774585730[0] = state[7];
   out_3272129980774585730[1] = state[8];
   out_3272129980774585730[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2764721259089213499) {
   out_2764721259089213499[0] = 0;
   out_2764721259089213499[1] = 0;
   out_2764721259089213499[2] = 0;
   out_2764721259089213499[3] = 0;
   out_2764721259089213499[4] = 0;
   out_2764721259089213499[5] = 0;
   out_2764721259089213499[6] = 0;
   out_2764721259089213499[7] = 1;
   out_2764721259089213499[8] = 0;
   out_2764721259089213499[9] = 0;
   out_2764721259089213499[10] = 0;
   out_2764721259089213499[11] = 0;
   out_2764721259089213499[12] = 0;
   out_2764721259089213499[13] = 0;
   out_2764721259089213499[14] = 0;
   out_2764721259089213499[15] = 0;
   out_2764721259089213499[16] = 0;
   out_2764721259089213499[17] = 0;
   out_2764721259089213499[18] = 0;
   out_2764721259089213499[19] = 0;
   out_2764721259089213499[20] = 0;
   out_2764721259089213499[21] = 0;
   out_2764721259089213499[22] = 0;
   out_2764721259089213499[23] = 0;
   out_2764721259089213499[24] = 0;
   out_2764721259089213499[25] = 0;
   out_2764721259089213499[26] = 0;
   out_2764721259089213499[27] = 0;
   out_2764721259089213499[28] = 0;
   out_2764721259089213499[29] = 0;
   out_2764721259089213499[30] = 0;
   out_2764721259089213499[31] = 1;
   out_2764721259089213499[32] = 0;
   out_2764721259089213499[33] = 0;
   out_2764721259089213499[34] = 0;
   out_2764721259089213499[35] = 0;
   out_2764721259089213499[36] = 0;
   out_2764721259089213499[37] = 0;
   out_2764721259089213499[38] = 0;
   out_2764721259089213499[39] = 0;
   out_2764721259089213499[40] = 0;
   out_2764721259089213499[41] = 0;
   out_2764721259089213499[42] = 0;
   out_2764721259089213499[43] = 0;
   out_2764721259089213499[44] = 0;
   out_2764721259089213499[45] = 0;
   out_2764721259089213499[46] = 0;
   out_2764721259089213499[47] = 0;
   out_2764721259089213499[48] = 0;
   out_2764721259089213499[49] = 0;
   out_2764721259089213499[50] = 0;
   out_2764721259089213499[51] = 0;
   out_2764721259089213499[52] = 0;
   out_2764721259089213499[53] = 0;
   out_2764721259089213499[54] = 0;
   out_2764721259089213499[55] = 1;
   out_2764721259089213499[56] = 0;
   out_2764721259089213499[57] = 0;
   out_2764721259089213499[58] = 0;
   out_2764721259089213499[59] = 0;
   out_2764721259089213499[60] = 0;
   out_2764721259089213499[61] = 0;
   out_2764721259089213499[62] = 0;
   out_2764721259089213499[63] = 0;
   out_2764721259089213499[64] = 0;
   out_2764721259089213499[65] = 0;
   out_2764721259089213499[66] = 0;
   out_2764721259089213499[67] = 0;
   out_2764721259089213499[68] = 0;
}
void h_32(double *state, double *unused, double *out_2301249317401500166) {
   out_2301249317401500166[0] = state[3];
   out_2301249317401500166[1] = state[4];
   out_2301249317401500166[2] = state[5];
   out_2301249317401500166[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2409439959414559335) {
   out_2409439959414559335[0] = 0;
   out_2409439959414559335[1] = 0;
   out_2409439959414559335[2] = 0;
   out_2409439959414559335[3] = 1;
   out_2409439959414559335[4] = 0;
   out_2409439959414559335[5] = 0;
   out_2409439959414559335[6] = 0;
   out_2409439959414559335[7] = 0;
   out_2409439959414559335[8] = 0;
   out_2409439959414559335[9] = 0;
   out_2409439959414559335[10] = 0;
   out_2409439959414559335[11] = 0;
   out_2409439959414559335[12] = 0;
   out_2409439959414559335[13] = 0;
   out_2409439959414559335[14] = 0;
   out_2409439959414559335[15] = 0;
   out_2409439959414559335[16] = 0;
   out_2409439959414559335[17] = 0;
   out_2409439959414559335[18] = 0;
   out_2409439959414559335[19] = 0;
   out_2409439959414559335[20] = 0;
   out_2409439959414559335[21] = 0;
   out_2409439959414559335[22] = 0;
   out_2409439959414559335[23] = 0;
   out_2409439959414559335[24] = 0;
   out_2409439959414559335[25] = 0;
   out_2409439959414559335[26] = 0;
   out_2409439959414559335[27] = 1;
   out_2409439959414559335[28] = 0;
   out_2409439959414559335[29] = 0;
   out_2409439959414559335[30] = 0;
   out_2409439959414559335[31] = 0;
   out_2409439959414559335[32] = 0;
   out_2409439959414559335[33] = 0;
   out_2409439959414559335[34] = 0;
   out_2409439959414559335[35] = 0;
   out_2409439959414559335[36] = 0;
   out_2409439959414559335[37] = 0;
   out_2409439959414559335[38] = 0;
   out_2409439959414559335[39] = 0;
   out_2409439959414559335[40] = 0;
   out_2409439959414559335[41] = 0;
   out_2409439959414559335[42] = 0;
   out_2409439959414559335[43] = 0;
   out_2409439959414559335[44] = 0;
   out_2409439959414559335[45] = 0;
   out_2409439959414559335[46] = 0;
   out_2409439959414559335[47] = 0;
   out_2409439959414559335[48] = 0;
   out_2409439959414559335[49] = 0;
   out_2409439959414559335[50] = 0;
   out_2409439959414559335[51] = 1;
   out_2409439959414559335[52] = 0;
   out_2409439959414559335[53] = 0;
   out_2409439959414559335[54] = 0;
   out_2409439959414559335[55] = 0;
   out_2409439959414559335[56] = 0;
   out_2409439959414559335[57] = 0;
   out_2409439959414559335[58] = 0;
   out_2409439959414559335[59] = 0;
   out_2409439959414559335[60] = 0;
   out_2409439959414559335[61] = 0;
   out_2409439959414559335[62] = 0;
   out_2409439959414559335[63] = 0;
   out_2409439959414559335[64] = 0;
   out_2409439959414559335[65] = 0;
   out_2409439959414559335[66] = 0;
   out_2409439959414559335[67] = 0;
   out_2409439959414559335[68] = 0;
   out_2409439959414559335[69] = 0;
   out_2409439959414559335[70] = 0;
   out_2409439959414559335[71] = 0;
   out_2409439959414559335[72] = 0;
   out_2409439959414559335[73] = 0;
   out_2409439959414559335[74] = 0;
   out_2409439959414559335[75] = 1;
   out_2409439959414559335[76] = 0;
   out_2409439959414559335[77] = 0;
   out_2409439959414559335[78] = 0;
   out_2409439959414559335[79] = 0;
   out_2409439959414559335[80] = 0;
   out_2409439959414559335[81] = 0;
   out_2409439959414559335[82] = 0;
   out_2409439959414559335[83] = 0;
   out_2409439959414559335[84] = 0;
   out_2409439959414559335[85] = 0;
   out_2409439959414559335[86] = 0;
   out_2409439959414559335[87] = 0;
   out_2409439959414559335[88] = 0;
   out_2409439959414559335[89] = 0;
   out_2409439959414559335[90] = 0;
   out_2409439959414559335[91] = 0;
}
void h_13(double *state, double *unused, double *out_484676118093603460) {
   out_484676118093603460[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_484676118093603460[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_484676118093603460[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7074796751230287230) {
   out_7074796751230287230[0] = 0;
   out_7074796751230287230[1] = 0;
   out_7074796751230287230[2] = 0;
   out_7074796751230287230[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7074796751230287230[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7074796751230287230[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7074796751230287230[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7074796751230287230[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7074796751230287230[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7074796751230287230[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7074796751230287230[10] = 0;
   out_7074796751230287230[11] = 0;
   out_7074796751230287230[12] = 0;
   out_7074796751230287230[13] = 0;
   out_7074796751230287230[14] = 0;
   out_7074796751230287230[15] = 0;
   out_7074796751230287230[16] = 0;
   out_7074796751230287230[17] = 0;
   out_7074796751230287230[18] = 0;
   out_7074796751230287230[19] = 0;
   out_7074796751230287230[20] = 0;
   out_7074796751230287230[21] = 0;
   out_7074796751230287230[22] = 0;
   out_7074796751230287230[23] = 0;
   out_7074796751230287230[24] = 0;
   out_7074796751230287230[25] = 0;
   out_7074796751230287230[26] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7074796751230287230[27] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7074796751230287230[28] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7074796751230287230[29] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7074796751230287230[30] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7074796751230287230[31] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7074796751230287230[32] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7074796751230287230[33] = 0;
   out_7074796751230287230[34] = 0;
   out_7074796751230287230[35] = 0;
   out_7074796751230287230[36] = 0;
   out_7074796751230287230[37] = 0;
   out_7074796751230287230[38] = 0;
   out_7074796751230287230[39] = 0;
   out_7074796751230287230[40] = 0;
   out_7074796751230287230[41] = 0;
   out_7074796751230287230[42] = 0;
   out_7074796751230287230[43] = 0;
   out_7074796751230287230[44] = 0;
   out_7074796751230287230[45] = 0;
   out_7074796751230287230[46] = 0;
   out_7074796751230287230[47] = 0;
   out_7074796751230287230[48] = 0;
   out_7074796751230287230[49] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7074796751230287230[50] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7074796751230287230[51] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7074796751230287230[52] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7074796751230287230[53] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7074796751230287230[54] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7074796751230287230[55] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7074796751230287230[56] = 0;
   out_7074796751230287230[57] = 0;
   out_7074796751230287230[58] = 0;
   out_7074796751230287230[59] = 0;
   out_7074796751230287230[60] = 0;
   out_7074796751230287230[61] = 0;
   out_7074796751230287230[62] = 0;
   out_7074796751230287230[63] = 0;
   out_7074796751230287230[64] = 0;
   out_7074796751230287230[65] = 0;
   out_7074796751230287230[66] = 0;
   out_7074796751230287230[67] = 0;
   out_7074796751230287230[68] = 0;
}
void h_14(double *state, double *unused, double *out_3018609892509436051) {
   out_3018609892509436051[0] = state[10];
   out_3018609892509436051[1] = state[11];
   out_3018609892509436051[2] = state[12];
}
void H_14(double *state, double *unused, double *out_126318548185852723) {
   out_126318548185852723[0] = 0;
   out_126318548185852723[1] = 0;
   out_126318548185852723[2] = 0;
   out_126318548185852723[3] = 0;
   out_126318548185852723[4] = 0;
   out_126318548185852723[5] = 0;
   out_126318548185852723[6] = 0;
   out_126318548185852723[7] = 0;
   out_126318548185852723[8] = 0;
   out_126318548185852723[9] = 0;
   out_126318548185852723[10] = 1;
   out_126318548185852723[11] = 0;
   out_126318548185852723[12] = 0;
   out_126318548185852723[13] = 0;
   out_126318548185852723[14] = 0;
   out_126318548185852723[15] = 0;
   out_126318548185852723[16] = 0;
   out_126318548185852723[17] = 0;
   out_126318548185852723[18] = 0;
   out_126318548185852723[19] = 0;
   out_126318548185852723[20] = 0;
   out_126318548185852723[21] = 0;
   out_126318548185852723[22] = 0;
   out_126318548185852723[23] = 0;
   out_126318548185852723[24] = 0;
   out_126318548185852723[25] = 0;
   out_126318548185852723[26] = 0;
   out_126318548185852723[27] = 0;
   out_126318548185852723[28] = 0;
   out_126318548185852723[29] = 0;
   out_126318548185852723[30] = 0;
   out_126318548185852723[31] = 0;
   out_126318548185852723[32] = 0;
   out_126318548185852723[33] = 0;
   out_126318548185852723[34] = 1;
   out_126318548185852723[35] = 0;
   out_126318548185852723[36] = 0;
   out_126318548185852723[37] = 0;
   out_126318548185852723[38] = 0;
   out_126318548185852723[39] = 0;
   out_126318548185852723[40] = 0;
   out_126318548185852723[41] = 0;
   out_126318548185852723[42] = 0;
   out_126318548185852723[43] = 0;
   out_126318548185852723[44] = 0;
   out_126318548185852723[45] = 0;
   out_126318548185852723[46] = 0;
   out_126318548185852723[47] = 0;
   out_126318548185852723[48] = 0;
   out_126318548185852723[49] = 0;
   out_126318548185852723[50] = 0;
   out_126318548185852723[51] = 0;
   out_126318548185852723[52] = 0;
   out_126318548185852723[53] = 0;
   out_126318548185852723[54] = 0;
   out_126318548185852723[55] = 0;
   out_126318548185852723[56] = 0;
   out_126318548185852723[57] = 0;
   out_126318548185852723[58] = 1;
   out_126318548185852723[59] = 0;
   out_126318548185852723[60] = 0;
   out_126318548185852723[61] = 0;
   out_126318548185852723[62] = 0;
   out_126318548185852723[63] = 0;
   out_126318548185852723[64] = 0;
   out_126318548185852723[65] = 0;
   out_126318548185852723[66] = 0;
   out_126318548185852723[67] = 0;
   out_126318548185852723[68] = 0;
}
void h_19(double *state, double *unused, double *out_2033301854628199061) {
   out_2033301854628199061[0] = state[20];
   out_2033301854628199061[1] = state[21];
   out_2033301854628199061[2] = state[22];
}
void H_19(double *state, double *unused, double *out_4558998399288283904) {
   out_4558998399288283904[0] = 0;
   out_4558998399288283904[1] = 0;
   out_4558998399288283904[2] = 0;
   out_4558998399288283904[3] = 0;
   out_4558998399288283904[4] = 0;
   out_4558998399288283904[5] = 0;
   out_4558998399288283904[6] = 0;
   out_4558998399288283904[7] = 0;
   out_4558998399288283904[8] = 0;
   out_4558998399288283904[9] = 0;
   out_4558998399288283904[10] = 0;
   out_4558998399288283904[11] = 0;
   out_4558998399288283904[12] = 0;
   out_4558998399288283904[13] = 0;
   out_4558998399288283904[14] = 0;
   out_4558998399288283904[15] = 0;
   out_4558998399288283904[16] = 0;
   out_4558998399288283904[17] = 0;
   out_4558998399288283904[18] = 0;
   out_4558998399288283904[19] = 0;
   out_4558998399288283904[20] = 1;
   out_4558998399288283904[21] = 0;
   out_4558998399288283904[22] = 0;
   out_4558998399288283904[23] = 0;
   out_4558998399288283904[24] = 0;
   out_4558998399288283904[25] = 0;
   out_4558998399288283904[26] = 0;
   out_4558998399288283904[27] = 0;
   out_4558998399288283904[28] = 0;
   out_4558998399288283904[29] = 0;
   out_4558998399288283904[30] = 0;
   out_4558998399288283904[31] = 0;
   out_4558998399288283904[32] = 0;
   out_4558998399288283904[33] = 0;
   out_4558998399288283904[34] = 0;
   out_4558998399288283904[35] = 0;
   out_4558998399288283904[36] = 0;
   out_4558998399288283904[37] = 0;
   out_4558998399288283904[38] = 0;
   out_4558998399288283904[39] = 0;
   out_4558998399288283904[40] = 0;
   out_4558998399288283904[41] = 0;
   out_4558998399288283904[42] = 0;
   out_4558998399288283904[43] = 0;
   out_4558998399288283904[44] = 1;
   out_4558998399288283904[45] = 0;
   out_4558998399288283904[46] = 0;
   out_4558998399288283904[47] = 0;
   out_4558998399288283904[48] = 0;
   out_4558998399288283904[49] = 0;
   out_4558998399288283904[50] = 0;
   out_4558998399288283904[51] = 0;
   out_4558998399288283904[52] = 0;
   out_4558998399288283904[53] = 0;
   out_4558998399288283904[54] = 0;
   out_4558998399288283904[55] = 0;
   out_4558998399288283904[56] = 0;
   out_4558998399288283904[57] = 0;
   out_4558998399288283904[58] = 0;
   out_4558998399288283904[59] = 0;
   out_4558998399288283904[60] = 0;
   out_4558998399288283904[61] = 0;
   out_4558998399288283904[62] = 0;
   out_4558998399288283904[63] = 0;
   out_4558998399288283904[64] = 0;
   out_4558998399288283904[65] = 0;
   out_4558998399288283904[66] = 0;
   out_4558998399288283904[67] = 0;
   out_4558998399288283904[68] = 1;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_3(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<1, 3, 0>(in_x, in_P, h_3, H_3, NULL, in_z, in_R, in_ea, MAHA_THRESH_3);
}
void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_19(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_19, H_19, NULL, in_z, in_R, in_ea, MAHA_THRESH_19);
}
void live_H(double *in_vec, double *out_83290133610455021) {
  H(in_vec, out_83290133610455021);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1295404048766981892) {
  err_fun(nom_x, delta_x, out_1295404048766981892);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7718846480313973371) {
  inv_err_fun(nom_x, true_x, out_7718846480313973371);
}
void live_H_mod_fun(double *state, double *out_1359201248254019031) {
  H_mod_fun(state, out_1359201248254019031);
}
void live_f_fun(double *state, double dt, double *out_1465447188795773295) {
  f_fun(state,  dt, out_1465447188795773295);
}
void live_F_fun(double *state, double dt, double *out_3920041907016275812) {
  F_fun(state,  dt, out_3920041907016275812);
}
void live_h_3(double *state, double *unused, double *out_271482028885263482) {
  h_3(state, unused, out_271482028885263482);
}
void live_H_3(double *state, double *unused, double *out_6517061992468698667) {
  H_3(state, unused, out_6517061992468698667);
}
void live_h_4(double *state, double *unused, double *out_4706127011587876512) {
  h_4(state, unused, out_4706127011587876512);
}
void live_H_4(double *state, double *unused, double *out_6594544378669371375) {
  H_4(state, unused, out_6594544378669371375);
}
void live_h_9(double *state, double *unused, double *out_3018609892509436051) {
  h_9(state, unused, out_3018609892509436051);
}
void live_H_9(double *state, double *unused, double *out_126318548185852723) {
  H_9(state, unused, out_126318548185852723);
}
void live_h_10(double *state, double *unused, double *out_5194968214894559743) {
  h_10(state, unused, out_5194968214894559743);
}
void live_H_10(double *state, double *unused, double *out_8423363738041589047) {
  H_10(state, unused, out_8423363738041589047);
}
void live_h_12(double *state, double *unused, double *out_2336519524919619223) {
  h_12(state, unused, out_2336519524919619223);
}
void live_H_12(double *state, double *unused, double *out_89631483945793678) {
  H_12(state, unused, out_89631483945793678);
}
void live_h_31(double *state, double *unused, double *out_3272129980774585730) {
  h_31(state, unused, out_3272129980774585730);
}
void live_H_31(double *state, double *unused, double *out_2764721259089213499) {
  H_31(state, unused, out_2764721259089213499);
}
void live_h_32(double *state, double *unused, double *out_2301249317401500166) {
  h_32(state, unused, out_2301249317401500166);
}
void live_H_32(double *state, double *unused, double *out_2409439959414559335) {
  H_32(state, unused, out_2409439959414559335);
}
void live_h_13(double *state, double *unused, double *out_484676118093603460) {
  h_13(state, unused, out_484676118093603460);
}
void live_H_13(double *state, double *unused, double *out_7074796751230287230) {
  H_13(state, unused, out_7074796751230287230);
}
void live_h_14(double *state, double *unused, double *out_3018609892509436051) {
  h_14(state, unused, out_3018609892509436051);
}
void live_H_14(double *state, double *unused, double *out_126318548185852723) {
  H_14(state, unused, out_126318548185852723);
}
void live_h_19(double *state, double *unused, double *out_2033301854628199061) {
  h_19(state, unused, out_2033301854628199061);
}
void live_H_19(double *state, double *unused, double *out_4558998399288283904) {
  H_19(state, unused, out_4558998399288283904);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 3, 4, 9, 10, 12, 31, 32, 13, 14, 19 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 3, live_h_3 },
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 19, live_h_19 },
  },
  .Hs = {
    { 3, live_H_3 },
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 19, live_H_19 },
  },
  .updates = {
    { 3, live_update_3 },
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 19, live_update_19 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
